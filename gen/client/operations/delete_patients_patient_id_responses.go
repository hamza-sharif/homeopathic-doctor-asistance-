// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeletePatientsPatientIDReader is a Reader for the DeletePatientsPatientID structure.
type DeletePatientsPatientIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeletePatientsPatientIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewDeletePatientsPatientIDCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeletePatientsPatientIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeletePatientsPatientIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /patients/{patient_id}] DeletePatientsPatientID", response, response.Code())
	}
}

// NewDeletePatientsPatientIDCreated creates a DeletePatientsPatientIDCreated with default headers values
func NewDeletePatientsPatientIDCreated() *DeletePatientsPatientIDCreated {
	return &DeletePatientsPatientIDCreated{}
}

/*
DeletePatientsPatientIDCreated describes a response with status code 201, with default header values.

Patient deleted successfully
*/
type DeletePatientsPatientIDCreated struct {
	Payload string
}

// IsSuccess returns true when this delete patients patient Id created response has a 2xx status code
func (o *DeletePatientsPatientIDCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete patients patient Id created response has a 3xx status code
func (o *DeletePatientsPatientIDCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete patients patient Id created response has a 4xx status code
func (o *DeletePatientsPatientIDCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete patients patient Id created response has a 5xx status code
func (o *DeletePatientsPatientIDCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this delete patients patient Id created response a status code equal to that given
func (o *DeletePatientsPatientIDCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the delete patients patient Id created response
func (o *DeletePatientsPatientIDCreated) Code() int {
	return 201
}

func (o *DeletePatientsPatientIDCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /patients/{patient_id}][%d] deletePatientsPatientIdCreated %s", 201, payload)
}

func (o *DeletePatientsPatientIDCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /patients/{patient_id}][%d] deletePatientsPatientIdCreated %s", 201, payload)
}

func (o *DeletePatientsPatientIDCreated) GetPayload() string {
	return o.Payload
}

func (o *DeletePatientsPatientIDCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePatientsPatientIDBadRequest creates a DeletePatientsPatientIDBadRequest with default headers values
func NewDeletePatientsPatientIDBadRequest() *DeletePatientsPatientIDBadRequest {
	return &DeletePatientsPatientIDBadRequest{}
}

/*
DeletePatientsPatientIDBadRequest describes a response with status code 400, with default header values.

bad request
*/
type DeletePatientsPatientIDBadRequest struct {
	Payload interface{}
}

// IsSuccess returns true when this delete patients patient Id bad request response has a 2xx status code
func (o *DeletePatientsPatientIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete patients patient Id bad request response has a 3xx status code
func (o *DeletePatientsPatientIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete patients patient Id bad request response has a 4xx status code
func (o *DeletePatientsPatientIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete patients patient Id bad request response has a 5xx status code
func (o *DeletePatientsPatientIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete patients patient Id bad request response a status code equal to that given
func (o *DeletePatientsPatientIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete patients patient Id bad request response
func (o *DeletePatientsPatientIDBadRequest) Code() int {
	return 400
}

func (o *DeletePatientsPatientIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /patients/{patient_id}][%d] deletePatientsPatientIdBadRequest %s", 400, payload)
}

func (o *DeletePatientsPatientIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /patients/{patient_id}][%d] deletePatientsPatientIdBadRequest %s", 400, payload)
}

func (o *DeletePatientsPatientIDBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *DeletePatientsPatientIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePatientsPatientIDUnauthorized creates a DeletePatientsPatientIDUnauthorized with default headers values
func NewDeletePatientsPatientIDUnauthorized() *DeletePatientsPatientIDUnauthorized {
	return &DeletePatientsPatientIDUnauthorized{}
}

/*
DeletePatientsPatientIDUnauthorized describes a response with status code 401, with default header values.

internal server error
*/
type DeletePatientsPatientIDUnauthorized struct {
	Payload interface{}
}

// IsSuccess returns true when this delete patients patient Id unauthorized response has a 2xx status code
func (o *DeletePatientsPatientIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete patients patient Id unauthorized response has a 3xx status code
func (o *DeletePatientsPatientIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete patients patient Id unauthorized response has a 4xx status code
func (o *DeletePatientsPatientIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete patients patient Id unauthorized response has a 5xx status code
func (o *DeletePatientsPatientIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete patients patient Id unauthorized response a status code equal to that given
func (o *DeletePatientsPatientIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete patients patient Id unauthorized response
func (o *DeletePatientsPatientIDUnauthorized) Code() int {
	return 401
}

func (o *DeletePatientsPatientIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /patients/{patient_id}][%d] deletePatientsPatientIdUnauthorized %s", 401, payload)
}

func (o *DeletePatientsPatientIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /patients/{patient_id}][%d] deletePatientsPatientIdUnauthorized %s", 401, payload)
}

func (o *DeletePatientsPatientIDUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *DeletePatientsPatientIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
