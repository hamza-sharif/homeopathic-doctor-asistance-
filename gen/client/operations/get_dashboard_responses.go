// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/hamza-sharif/homeopathic-doctor-assistant/gen/models"
)

// GetDashboardReader is a Reader for the GetDashboard structure.
type GetDashboardReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDashboardReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDashboardOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetDashboardUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /dashboard] GetDashboard", response, response.Code())
	}
}

// NewGetDashboardOK creates a GetDashboardOK with default headers values
func NewGetDashboardOK() *GetDashboardOK {
	return &GetDashboardOK{}
}

/*
GetDashboardOK describes a response with status code 200, with default header values.

basic records
*/
type GetDashboardOK struct {
	Payload *models.Dashboard
}

// IsSuccess returns true when this get dashboard o k response has a 2xx status code
func (o *GetDashboardOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get dashboard o k response has a 3xx status code
func (o *GetDashboardOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get dashboard o k response has a 4xx status code
func (o *GetDashboardOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get dashboard o k response has a 5xx status code
func (o *GetDashboardOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get dashboard o k response a status code equal to that given
func (o *GetDashboardOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get dashboard o k response
func (o *GetDashboardOK) Code() int {
	return 200
}

func (o *GetDashboardOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /dashboard][%d] getDashboardOK %s", 200, payload)
}

func (o *GetDashboardOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /dashboard][%d] getDashboardOK %s", 200, payload)
}

func (o *GetDashboardOK) GetPayload() *models.Dashboard {
	return o.Payload
}

func (o *GetDashboardOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Dashboard)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDashboardUnauthorized creates a GetDashboardUnauthorized with default headers values
func NewGetDashboardUnauthorized() *GetDashboardUnauthorized {
	return &GetDashboardUnauthorized{}
}

/*
GetDashboardUnauthorized describes a response with status code 401, with default header values.

internal server error
*/
type GetDashboardUnauthorized struct {
	Payload interface{}
}

// IsSuccess returns true when this get dashboard unauthorized response has a 2xx status code
func (o *GetDashboardUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get dashboard unauthorized response has a 3xx status code
func (o *GetDashboardUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get dashboard unauthorized response has a 4xx status code
func (o *GetDashboardUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get dashboard unauthorized response has a 5xx status code
func (o *GetDashboardUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get dashboard unauthorized response a status code equal to that given
func (o *GetDashboardUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get dashboard unauthorized response
func (o *GetDashboardUnauthorized) Code() int {
	return 401
}

func (o *GetDashboardUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /dashboard][%d] getDashboardUnauthorized %s", 401, payload)
}

func (o *GetDashboardUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /dashboard][%d] getDashboardUnauthorized %s", 401, payload)
}

func (o *GetDashboardUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *GetDashboardUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
