// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PutUpdatePriceReader is a Reader for the PutUpdatePrice structure.
type PutUpdatePriceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutUpdatePriceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutUpdatePriceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPutUpdatePriceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /update-price] PutUpdatePrice", response, response.Code())
	}
}

// NewPutUpdatePriceOK creates a PutUpdatePriceOK with default headers values
func NewPutUpdatePriceOK() *PutUpdatePriceOK {
	return &PutUpdatePriceOK{}
}

/*
PutUpdatePriceOK describes a response with status code 200, with default header values.

Password updated successfully
*/
type PutUpdatePriceOK struct {
	Payload string
}

// IsSuccess returns true when this put update price o k response has a 2xx status code
func (o *PutUpdatePriceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put update price o k response has a 3xx status code
func (o *PutUpdatePriceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put update price o k response has a 4xx status code
func (o *PutUpdatePriceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this put update price o k response has a 5xx status code
func (o *PutUpdatePriceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this put update price o k response a status code equal to that given
func (o *PutUpdatePriceOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the put update price o k response
func (o *PutUpdatePriceOK) Code() int {
	return 200
}

func (o *PutUpdatePriceOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /update-price][%d] putUpdatePriceOK %s", 200, payload)
}

func (o *PutUpdatePriceOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /update-price][%d] putUpdatePriceOK %s", 200, payload)
}

func (o *PutUpdatePriceOK) GetPayload() string {
	return o.Payload
}

func (o *PutUpdatePriceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUpdatePriceUnauthorized creates a PutUpdatePriceUnauthorized with default headers values
func NewPutUpdatePriceUnauthorized() *PutUpdatePriceUnauthorized {
	return &PutUpdatePriceUnauthorized{}
}

/*
PutUpdatePriceUnauthorized describes a response with status code 401, with default header values.

internal server error
*/
type PutUpdatePriceUnauthorized struct {
	Payload interface{}
}

// IsSuccess returns true when this put update price unauthorized response has a 2xx status code
func (o *PutUpdatePriceUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put update price unauthorized response has a 3xx status code
func (o *PutUpdatePriceUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put update price unauthorized response has a 4xx status code
func (o *PutUpdatePriceUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this put update price unauthorized response has a 5xx status code
func (o *PutUpdatePriceUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this put update price unauthorized response a status code equal to that given
func (o *PutUpdatePriceUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the put update price unauthorized response
func (o *PutUpdatePriceUnauthorized) Code() int {
	return 401
}

func (o *PutUpdatePriceUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /update-price][%d] putUpdatePriceUnauthorized %s", 401, payload)
}

func (o *PutUpdatePriceUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /update-price][%d] putUpdatePriceUnauthorized %s", 401, payload)
}

func (o *PutUpdatePriceUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *PutUpdatePriceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
PutUpdatePriceBody put update price body
swagger:model PutUpdatePriceBody
*/
type PutUpdatePriceBody struct {

	// price
	Price int32 `json:"price,omitempty"`
}

// Validate validates this put update price body
func (o *PutUpdatePriceBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this put update price body based on context it is used
func (o *PutUpdatePriceBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PutUpdatePriceBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutUpdatePriceBody) UnmarshalBinary(b []byte) error {
	var res PutUpdatePriceBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
