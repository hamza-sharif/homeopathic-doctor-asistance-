// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PostForgetPasswordReader is a Reader for the PostForgetPassword structure.
type PostForgetPasswordReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostForgetPasswordReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostForgetPasswordOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostForgetPasswordBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /forget-password] PostForgetPassword", response, response.Code())
	}
}

// NewPostForgetPasswordOK creates a PostForgetPasswordOK with default headers values
func NewPostForgetPasswordOK() *PostForgetPasswordOK {
	return &PostForgetPasswordOK{}
}

/*
PostForgetPasswordOK describes a response with status code 200, with default header values.

Password reset instructions sent
*/
type PostForgetPasswordOK struct {
}

// IsSuccess returns true when this post forget password o k response has a 2xx status code
func (o *PostForgetPasswordOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post forget password o k response has a 3xx status code
func (o *PostForgetPasswordOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post forget password o k response has a 4xx status code
func (o *PostForgetPasswordOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post forget password o k response has a 5xx status code
func (o *PostForgetPasswordOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post forget password o k response a status code equal to that given
func (o *PostForgetPasswordOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post forget password o k response
func (o *PostForgetPasswordOK) Code() int {
	return 200
}

func (o *PostForgetPasswordOK) Error() string {
	return fmt.Sprintf("[POST /forget-password][%d] postForgetPasswordOK", 200)
}

func (o *PostForgetPasswordOK) String() string {
	return fmt.Sprintf("[POST /forget-password][%d] postForgetPasswordOK", 200)
}

func (o *PostForgetPasswordOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostForgetPasswordBadRequest creates a PostForgetPasswordBadRequest with default headers values
func NewPostForgetPasswordBadRequest() *PostForgetPasswordBadRequest {
	return &PostForgetPasswordBadRequest{}
}

/*
PostForgetPasswordBadRequest describes a response with status code 400, with default header values.

bad request
*/
type PostForgetPasswordBadRequest struct {
	Payload interface{}
}

// IsSuccess returns true when this post forget password bad request response has a 2xx status code
func (o *PostForgetPasswordBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post forget password bad request response has a 3xx status code
func (o *PostForgetPasswordBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post forget password bad request response has a 4xx status code
func (o *PostForgetPasswordBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post forget password bad request response has a 5xx status code
func (o *PostForgetPasswordBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post forget password bad request response a status code equal to that given
func (o *PostForgetPasswordBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post forget password bad request response
func (o *PostForgetPasswordBadRequest) Code() int {
	return 400
}

func (o *PostForgetPasswordBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /forget-password][%d] postForgetPasswordBadRequest %s", 400, payload)
}

func (o *PostForgetPasswordBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /forget-password][%d] postForgetPasswordBadRequest %s", 400, payload)
}

func (o *PostForgetPasswordBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *PostForgetPasswordBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
PostForgetPasswordBody post forget password body
swagger:model PostForgetPasswordBody
*/
type PostForgetPasswordBody struct {

	// password
	Password string `json:"password,omitempty"`

	// username
	Username string `json:"username,omitempty"`
}

// Validate validates this post forget password body
func (o *PostForgetPasswordBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post forget password body based on context it is used
func (o *PostForgetPasswordBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostForgetPasswordBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostForgetPasswordBody) UnmarshalBinary(b []byte) error {
	var res PostForgetPasswordBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
