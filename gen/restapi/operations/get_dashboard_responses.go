// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/hamza-sharif/homeopathic-doctor-assistant/gen/models"
)

// GetDashboardOKCode is the HTTP code returned for type GetDashboardOK
const GetDashboardOKCode int = 200

/*
GetDashboardOK basic records

swagger:response getDashboardOK
*/
type GetDashboardOK struct {

	/*
	  In: Body
	*/
	Payload *models.Dashboard `json:"body,omitempty"`
}

// NewGetDashboardOK creates GetDashboardOK with default headers values
func NewGetDashboardOK() *GetDashboardOK {

	return &GetDashboardOK{}
}

// WithPayload adds the payload to the get dashboard o k response
func (o *GetDashboardOK) WithPayload(payload *models.Dashboard) *GetDashboardOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get dashboard o k response
func (o *GetDashboardOK) SetPayload(payload *models.Dashboard) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDashboardOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetDashboardUnauthorizedCode is the HTTP code returned for type GetDashboardUnauthorized
const GetDashboardUnauthorizedCode int = 401

/*
GetDashboardUnauthorized internal server error

swagger:response getDashboardUnauthorized
*/
type GetDashboardUnauthorized struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewGetDashboardUnauthorized creates GetDashboardUnauthorized with default headers values
func NewGetDashboardUnauthorized() *GetDashboardUnauthorized {

	return &GetDashboardUnauthorized{}
}

// WithPayload adds the payload to the get dashboard unauthorized response
func (o *GetDashboardUnauthorized) WithPayload(payload interface{}) *GetDashboardUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get dashboard unauthorized response
func (o *GetDashboardUnauthorized) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDashboardUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
