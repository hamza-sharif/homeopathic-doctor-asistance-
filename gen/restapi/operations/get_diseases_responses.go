// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/hamza-sharif/homeopathic-doctor-assistant/gen/models"
)

// GetDiseasesOKCode is the HTTP code returned for type GetDiseasesOK
const GetDiseasesOKCode int = 200

/*
GetDiseasesOK List of diseases

swagger:response getDiseasesOK
*/
type GetDiseasesOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Disease `json:"body,omitempty"`
}

// NewGetDiseasesOK creates GetDiseasesOK with default headers values
func NewGetDiseasesOK() *GetDiseasesOK {

	return &GetDiseasesOK{}
}

// WithPayload adds the payload to the get diseases o k response
func (o *GetDiseasesOK) WithPayload(payload []*models.Disease) *GetDiseasesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get diseases o k response
func (o *GetDiseasesOK) SetPayload(payload []*models.Disease) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDiseasesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Disease, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetDiseasesBadRequestCode is the HTTP code returned for type GetDiseasesBadRequest
const GetDiseasesBadRequestCode int = 400

/*
GetDiseasesBadRequest bad request

swagger:response getDiseasesBadRequest
*/
type GetDiseasesBadRequest struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewGetDiseasesBadRequest creates GetDiseasesBadRequest with default headers values
func NewGetDiseasesBadRequest() *GetDiseasesBadRequest {

	return &GetDiseasesBadRequest{}
}

// WithPayload adds the payload to the get diseases bad request response
func (o *GetDiseasesBadRequest) WithPayload(payload interface{}) *GetDiseasesBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get diseases bad request response
func (o *GetDiseasesBadRequest) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDiseasesBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
