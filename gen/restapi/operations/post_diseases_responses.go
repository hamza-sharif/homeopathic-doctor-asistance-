// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// PostDiseasesCreatedCode is the HTTP code returned for type PostDiseasesCreated
const PostDiseasesCreatedCode int = 201

/*
PostDiseasesCreated Medicine added successfully

swagger:response postDiseasesCreated
*/
type PostDiseasesCreated struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPostDiseasesCreated creates PostDiseasesCreated with default headers values
func NewPostDiseasesCreated() *PostDiseasesCreated {

	return &PostDiseasesCreated{}
}

// WithPayload adds the payload to the post diseases created response
func (o *PostDiseasesCreated) WithPayload(payload string) *PostDiseasesCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post diseases created response
func (o *PostDiseasesCreated) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostDiseasesCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PostDiseasesBadRequestCode is the HTTP code returned for type PostDiseasesBadRequest
const PostDiseasesBadRequestCode int = 400

/*
PostDiseasesBadRequest bad request

swagger:response postDiseasesBadRequest
*/
type PostDiseasesBadRequest struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewPostDiseasesBadRequest creates PostDiseasesBadRequest with default headers values
func NewPostDiseasesBadRequest() *PostDiseasesBadRequest {

	return &PostDiseasesBadRequest{}
}

// WithPayload adds the payload to the post diseases bad request response
func (o *PostDiseasesBadRequest) WithPayload(payload interface{}) *PostDiseasesBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post diseases bad request response
func (o *PostDiseasesBadRequest) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostDiseasesBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
